Pagination 

const totalPages = Math.ceil(data.totalCount / 5);
const DOTS = '...';

const renderPaginationButtons = () => {
  const showDots = totalPages > 7;
  
  return Array.from({ length: totalPages }, (_, i) => {
    const pageNumber = i + 1;
    
    // Always show first page, last page, current page and adjacent pages
    if (
      pageNumber === 1 ||
      pageNumber === totalPages ||
      (pageNumber >= page - 1 && pageNumber <= page + 1) ||
      (!showDots && pageNumber <= 7)
    ) {
      return (
        <Link key={pageNumber} href={`?page=${pageNumber}`}>
          <Button
            variant={page === pageNumber ? "default" : "secondary"}
            size="sm"
          >
            {pageNumber}
          </Button>
        </Link>
      );
    }

    // Show dots if there's a gap
    if (
      (showDots && pageNumber === 2) ||
      (showDots && pageNumber === totalPages - 1)
    ) {
      return (
        <Button key={`dots-${pageNumber}`} variant="secondary" size="sm" disabled>
          {DOTS}
        </Button>
      );
    }

    return null;
  }).filter(Boolean); // Remove null values
};

{renderPaginationButtons()}